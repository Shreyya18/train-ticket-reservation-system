CREATE TABLE Train (
  Train_No INT PRIMARY KEY,
  Train_Name VARCHAR(50) NOT NULL,
  Source_Station VARCHAR(50) NOT NULL,
  Destination_Station VARCHAR(50) NOT NULL,
  Departure_Time TIME NOT NULL,
  Arrival_Time TIME NOT NULL,
  Journey_Duration VARCHAR(20) NOT NULL,
  Frequency VARCHAR(20) NOT NULL,
  Class_Type VARCHAR(20) NOT NULL,
  Total_Seats INT NOT NULL,
  Available_Seats INT NOT NULL,
  Route VARCHAR(100) NOT NULL
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
INSERT INTO Train (Train_No, Train_Name, Source_Station, Destination_Station, Departure_Time, Arrival_Time, Journey_Duration, Frequency, Class_Type, Total_Seats, Available_Seats, Route)
VALUES
  (12345, 'Rajdhani Express', 'New Delhi', 'Mumbai Central', '06:00:00', '20:00:00', '14 hours', 'Daily', 'AC 1st Class', 1000, 800, 'New Delhi - Mumbai Central via Agra - Bhopal'),
  (12346, 'Shatabdi Express', 'New Delhi', 'Chennai Central', '07:00:00', '21:00:00', '14 hours', 'Daily', 'AC 2nd Class', 800, 600, 'New Delhi - Chennai Central via Agra - Hyderabad'),
  (12347, 'Garib Rath Express', 'New Delhi', 'Kolkata', '08:00:00', '22:00:00', '14 hours', 'Weekly', 'Sleeper Class', 1200, 900, 'New Delhi - Kolkata via Agra - Patna');
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CREATE TABLE Train (
  Train_No INT PRIMARY KEY,
  Train_Name VARCHAR(50) NOT NULL,
  Source_Station VARCHAR(50) NOT NULL,
  Destination_Station VARCHAR(50) NOT NULL,
  Departure_Time TIME NOT NULL,
  Arrival_Time TIME NOT NULL,
  Journey_Duration VARCHAR(20) NOT NULL,
  Frequency VARCHAR(20) NOT NULL,
  Class_Type VARCHAR(20) NOT NULL,
  Total_Seats INT NOT NULL,
  Route VARCHAR(100) NOT NULL
);


CREATE TABLE Booking (
  Booking_ID INT PRIMARY KEY,
  Train_No INT NOT NULL,
  Class_Type VARCHAR(20) NOT NULL,
  Seat_No INT NOT NULL,
  Passenger_Name VARCHAR(50) NOT NULL,
  Booking_Status VARCHAR(20) NOT NULL DEFAULT 'Booked',
  FOREIGN KEY (Train_No) REFERENCES Train(Train_No)
);


SELECT 
  T.Total_Seats - COUNT(B.Seat_No) AS Available_Seats
FROM 
  Train T
  LEFT JOIN Booking B ON T.Train_No = B.Train_No AND B.Class_Type = T.Class_Type AND B.Booking_Status = 'Booked'
WHERE 
  T.Train_No = 12345 AND T.Class_Type = 'AC 1st Class'
GROUP BY 
  T.Total_Seats;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if i use set-based operations can i able to display table with all attributes which you hs=ave given earlier


Yes, you can use set-based operations to display the Train table with all attributes, including the calculated Available_Seats column. Here's an example:

sql

Open In Editor
Edit
Copy code
SELECT 
  T.Train_No,
  T.Train_Name,
  T.Source_Station,
  T.Destination_Station,
  T.Departure_Time,
  T.Arrival_Time,
  T.Journey_Duration,
  T.Frequency,
  T.Class_Type,
  T.Total_Seats,
  T.Route,
  T.Total_Seats - COALESCE(B.Booked_Seats, 0) AS Available_Seats
FROM 
  Train T
  LEFT JOIN (
    SELECT 
      Train_No,
      Class_Type,
      COUNT(Seat_No) AS Booked_Seats
    FROM 
      Booking
    WHERE 
      Booking_Status = 'Booked'
    GROUP BY 
      Train_No, Class_Type
  ) B ON T.Train_No = B.Train_No AND T.Class_Type = B.Class_Type
ORDER BY 
  T.Train_No, T.Class_Type;
This query uses a LEFT JOIN to combine the Train table with a subquery that calculates the number of booked seats for each train and class type. The COALESCE function is used to return 0 if there are no booked seats for a particular train and class type.

The resulting table will have all the attributes of the Train table, plus the calculated Available_Seats column.

Here's a sample output:


Open In Editor
Edit
Copy code
+----------+------------+---------------+-------------------+------------+------------+---------------+----------+-----------+----------+---------------+--------------+
| Train_No | Train_Name | Source_Station | Destination_Station | Departure_Time | Arrival_Time | Journey_Duration | Frequency | Class_Type | Total_Seats | Route        | Available_Seats |
+----------+------------+---------------+-------------------+------------+------------+---------------+----------+-----------+----------+---------------+--------------+
| 12345    | Rajdhani   | Delhi          | Mumbai            | 06:00:00     | 12:00:00     | 6 hours        | Daily     | AC 1st Class | 100        | Delhi-Mumbai | 80           |
| 12345    | Rajdhani   | Delhi          | Mumbai            | 06:00:00     | 12:00:00     | 6 hours        | Daily     | AC 2nd Class | 200        | Delhi-Mumbai | 150          |
| 12346    | Shatabdi   | Delhi          | Chennai           | 07:00:00     | 13:00:00     | 6 hours        | Daily     | AC 1st Class | 120        | Delhi-Chennai | 100          |
| 12346    | Shatabdi   | Delhi          | Chennai           | 07:00:00     | 13:00:00     | 6 hours        | Daily     | AC 2nd Class | 250        | Delhi-Chennai | 200          |
+----------+------------+---------------+-------------------+------------+------------+---------------+----------+-----------+----------+---------------+--------------+
Note that this query assumes that the Booking table has a Seat_No column, which is used to count the number of booked seats. If your Booking table has a different column for seat numbers, you'll need to adjust the query accordingly.